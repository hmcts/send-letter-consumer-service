#!groovy
@Library("Infrastructure") _

List<LinkedHashMap<String, Object>> secrets = [
  secret('s2s-url-for-tests', 'S2S_URL_FOR_TESTS'),
  secret('s2s-name-for-tests', 'S2S_NAME_FOR_TESTS'),
  secret('s2s-secret-for-tests', 'S2S_SECRET_FOR_TESTS'),
  secret('producer-url-for-tests', 'PRODUCER_URL_FOR_TESTS'),
  secret('ftp-hostname-for-tests', 'FTP_HOSTNAME_FOR_TESTS'),
  secret('ftp-port-for-tests', 'FTP_PORT_FOR_TESTS'),
  secret('ftp-fingerprint-for-tests', 'FTP_FINGERPRINT_FOR_TESTS'),
  secret('ftp-target-folder-for-tests', 'FTP_TARGET_FOLDER_FOR_TESTS'),
  secret('ftp-user-for-tests', 'FTP_USER_FOR_TESTS'),
  secret('ftp-private-key-for-tests', 'FTP_PRIVATE_KEY_FOR_TESTS'),
  secret('ftp-public-key-for-tests', 'FTP_PUBLIC_KEY_FOR_TESTS')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

properties([
  parameters([
    string(name: 'PRODUCT_NAME', defaultValue: 'send-letter', description: ''),
    string(name: 'APP', defaultValue: 'consumer', description: ''),
    string(name: 'TYPE', defaultValue: 'java', description: ''),
    string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
    choice(name: 'SUBSCRIPTION', choices: 'sandbox', description: 'Azure subscriptions available to build in')
  ]),
  [$class: 'GithubProjectProperty', projectUrlStr: 'github.com/hmcts/send-letter-consumer-service'],
  pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
  loadVaultSecrets(secrets)
}
